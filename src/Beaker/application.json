{
    "hints": {},
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDAgMQpieXRlY2Jsb2NrIDB4NmU3NTZkNWY2ZjY2NWY3OTYxNzk3MyAweDZlNzU2ZDVmNmY2NjVmNmU2MTc5NzMgMHg3NjZmNzQ2NTVmNjM2ODZmNjk2MzY1IDB4Njg2MTczNWY3NjZmNzQ2NSAweCAweDY1NmU2NDVmNzQ2OTZkNjUgMHg3MjY1NzM3NTZjNzQgMHg3Mzc0NjE3Mjc0NWY3NDY5NmQ2NSAweDc5NjU3MyAweDZlNmYgMHg3MDcyNmY3MDZmNzM2MTZjCnR4biBOdW1BcHBBcmdzCmludGNfMCAvLyAwCj09CmJueiBtYWluX2w4CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4ZGFlMzg2ZDggLy8gImNyZWF0ZV9wcm9wb3NhbChzdHJpbmcsdWludDY0KXZvaWQiCj09CmJueiBtYWluX2w3CnR4bmEgQXBwbGljYXRpb25BcmdzIDAKcHVzaGJ5dGVzIDB4OWMyYjgwZDUgLy8gInZvdGUoc3RyaW5nLHN0cmluZyxhcHBsaWNhdGlvbil2b2lkIgo9PQpibnogbWFpbl9sNgp0eG5hIEFwcGxpY2F0aW9uQXJncyAwCnB1c2hieXRlcyAweDBjNTU1OGJhIC8vICJnZXRfdm90ZV9yZXN1bHQoKXZvaWQiCj09CmJueiBtYWluX2w1CmVycgptYWluX2w1Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CnR4biBBcHBsaWNhdGlvbklECmludGNfMCAvLyAwCiE9CiYmCmFzc2VydApjYWxsc3ViIGdldHZvdGVyZXN1bHRfNwppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sNjoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpzdG9yZSAyCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKc3RvcmUgMwp0eG5hIEFwcGxpY2F0aW9uQXJncyAzCmludGNfMCAvLyAwCmdldGJ5dGUKc3RvcmUgNApsb2FkIDIKbG9hZCAzCmxvYWQgNApjYWxsc3ViIHZvdGVfNgppbnRjXzEgLy8gMQpyZXR1cm4KbWFpbl9sNzoKdHhuIE9uQ29tcGxldGlvbgppbnRjXzAgLy8gTm9PcAo9PQp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQomJgphc3NlcnQKdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQpzdG9yZSAwCnR4bmEgQXBwbGljYXRpb25BcmdzIDIKYnRvaQpzdG9yZSAxCmxvYWQgMApsb2FkIDEKY2FsbHN1YiBjcmVhdGVwcm9wb3NhbF81CmludGNfMSAvLyAxCnJldHVybgptYWluX2w4Ogp0eG4gT25Db21wbGV0aW9uCmludGNfMCAvLyBOb09wCj09CmJueiBtYWluX2wxNAp0eG4gT25Db21wbGV0aW9uCmludGNfMSAvLyBPcHRJbgo9PQpibnogbWFpbl9sMTMKdHhuIE9uQ29tcGxldGlvbgpwdXNoaW50IDIgLy8gQ2xvc2VPdXQKPT0KYm56IG1haW5fbDEyCmVycgptYWluX2wxMjoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKIT0KYXNzZXJ0CmNhbGxzdWIgY2xlYXJ2b3RlXzQKaW50Y18xIC8vIDEKcmV0dXJuCm1haW5fbDEzOgp0eG4gQXBwbGljYXRpb25JRAppbnRjXzAgLy8gMAohPQphc3NlcnQKY2FsbHN1YiBvcHRpbl8xCmludGNfMSAvLyAxCnJldHVybgptYWluX2wxNDoKdHhuIEFwcGxpY2F0aW9uSUQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmNhbGxzdWIgY3JlYXRlXzAKaW50Y18xIC8vIDEKcmV0dXJuCgovLyBjcmVhdGUKY3JlYXRlXzA6CmJ5dGVjIDEwIC8vICJwcm9wb3NhbCIKYnl0ZWMgNCAvLyAiIgphcHBfZ2xvYmFsX3B1dApieXRlYyA3IC8vICJzdGFydF90aW1lIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlYyA1IC8vICJlbmRfdGltZSIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKYnl0ZWMgNiAvLyAicmVzdWx0IgpieXRlYyA0IC8vICIiCmFwcF9nbG9iYWxfcHV0CmJ5dGVjXzAgLy8gIm51bV9vZl95YXlzIgppbnRjXzAgLy8gMAphcHBfZ2xvYmFsX3B1dApieXRlY18xIC8vICJudW1fb2ZfbmF5cyIKaW50Y18wIC8vIDAKYXBwX2dsb2JhbF9wdXQKcmV0c3ViCgovLyBvcHRpbgpvcHRpbl8xOgp0eG4gU2VuZGVyCmJ5dGVjXzIgLy8gInZvdGVfY2hvaWNlIgpieXRlYyA0IC8vICIiCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlY18zIC8vICJoYXNfdm90ZSIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dApyZXRzdWIKCi8vIGF1dGhfb25seQphdXRob25seV8yOgpnbG9iYWwgQ3JlYXRvckFkZHJlc3MKPT0KcmV0c3ViCgovLyBhdXRoX29wdGVkX2luCmF1dGhvcHRlZGluXzM6Cmdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25JRAphcHBfb3B0ZWRfaW4KcmV0c3ViCgovLyBjbGVhcl92b3RlCmNsZWFydm90ZV80Ogp0eG4gU2VuZGVyCmJ5dGVjXzMgLy8gImhhc192b3RlIgphcHBfbG9jYWxfZ2V0CmludGNfMSAvLyAxCj09CmFzc2VydAp0eG4gU2VuZGVyCmJ5dGVjXzIgLy8gInZvdGVfY2hvaWNlIgphcHBfbG9jYWxfZ2V0CmJ5dGVjIDggLy8gInllcyIKPT0KYm56IGNsZWFydm90ZV80X2wzCnR4biBTZW5kZXIKYnl0ZWNfMiAvLyAidm90ZV9jaG9pY2UiCmFwcF9sb2NhbF9nZXQKYnl0ZWMgOSAvLyAibm8iCj09CmJ6IGNsZWFydm90ZV80X2w0CmJ5dGVjXzEgLy8gIm51bV9vZl9uYXlzIgphcHBfZ2xvYmFsX2dldAppbnRjXzEgLy8gMQo+PQphc3NlcnQKYnl0ZWNfMSAvLyAibnVtX29mX25heXMiCmJ5dGVjXzEgLy8gIm51bV9vZl9uYXlzIgphcHBfZ2xvYmFsX2dldAppbnRjXzEgLy8gMQotCmFwcF9nbG9iYWxfcHV0CmIgY2xlYXJ2b3RlXzRfbDQKY2xlYXJ2b3RlXzRfbDM6CmJ5dGVjXzAgLy8gIm51bV9vZl95YXlzIgphcHBfZ2xvYmFsX2dldAppbnRjXzEgLy8gMQo+PQphc3NlcnQKYnl0ZWNfMCAvLyAibnVtX29mX3lheXMiCmJ5dGVjXzAgLy8gIm51bV9vZl95YXlzIgphcHBfZ2xvYmFsX2dldAppbnRjXzEgLy8gMQotCmFwcF9nbG9iYWxfcHV0CmNsZWFydm90ZV80X2w0Ogp0eG4gU2VuZGVyCmJ5dGVjXzIgLy8gInZvdGVfY2hvaWNlIgpieXRlYyA0IC8vICIiCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlY18zIC8vICJoYXNfdm90ZSIKaW50Y18wIC8vIDAKYXBwX2xvY2FsX3B1dApyZXRzdWIKCi8vIGNyZWF0ZV9wcm9wb3NhbApjcmVhdGVwcm9wb3NhbF81OgpzdG9yZSA2CnN0b3JlIDUKdHhuIFNlbmRlcgpjYWxsc3ViIGF1dGhvbmx5XzIKLy8gdW5hdXRob3JpemVkCmFzc2VydApieXRlYyAxMCAvLyAicHJvcG9zYWwiCmxvYWQgNQpleHRyYWN0IDIgMAphcHBfZ2xvYmFsX3B1dApieXRlYyA3IC8vICJzdGFydF90aW1lIgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmFwcF9nbG9iYWxfcHV0CmJ5dGVjIDUgLy8gImVuZF90aW1lIgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmxvYWQgNgorCmFwcF9nbG9iYWxfcHV0CnJldHN1YgoKLy8gdm90ZQp2b3RlXzY6CnN0b3JlIDkKc3RvcmUgOApzdG9yZSA3CnR4biBTZW5kZXIKY2FsbHN1YiBhdXRob3B0ZWRpbl8zCi8vIHVuYXV0aG9yaXplZAphc3NlcnQKdHhuIFNlbmRlcgpsb2FkIDkKdHhuYXMgQXBwbGljYXRpb25zCmxvYWQgOApleHRyYWN0IDIgMAphcHBfbG9jYWxfZ2V0X2V4CnN0b3JlIDExCnN0b3JlIDEwCmxvYWQgMTEKYXNzZXJ0Cmdsb2JhbCBMYXRlc3RUaW1lc3RhbXAKYnl0ZWMgNyAvLyAic3RhcnRfdGltZSIKYXBwX2dsb2JhbF9nZXQKPj0KZ2xvYmFsIExhdGVzdFRpbWVzdGFtcApieXRlYyA1IC8vICJlbmRfdGltZSIKYXBwX2dsb2JhbF9nZXQKPD0KJiYKYXNzZXJ0CmxvYWQgMTAKaW50Y18xIC8vIDEKPT0KYXNzZXJ0CnR4biBTZW5kZXIKYnl0ZWNfMyAvLyAiaGFzX3ZvdGUiCmFwcF9sb2NhbF9nZXQKaW50Y18wIC8vIDAKPT0KYXNzZXJ0CmxvYWQgNwpleHRyYWN0IDIgMApieXRlYyA4IC8vICJ5ZXMiCj09CmJueiB2b3RlXzZfbDMKbG9hZCA3CmV4dHJhY3QgMiAwCmJ5dGVjIDkgLy8gIm5vIgo9PQpieiB2b3RlXzZfbDQKdHhuIFNlbmRlcgpieXRlY18yIC8vICJ2b3RlX2Nob2ljZSIKYnl0ZWMgOSAvLyAibm8iCmFwcF9sb2NhbF9wdXQKYnl0ZWNfMSAvLyAibnVtX29mX25heXMiCmJ5dGVjXzEgLy8gIm51bV9vZl9uYXlzIgphcHBfZ2xvYmFsX2dldAppbnRjXzEgLy8gMQorCmFwcF9nbG9iYWxfcHV0CmIgdm90ZV82X2w0CnZvdGVfNl9sMzoKdHhuIFNlbmRlcgpieXRlY18yIC8vICJ2b3RlX2Nob2ljZSIKYnl0ZWMgOCAvLyAieWVzIgphcHBfbG9jYWxfcHV0CmJ5dGVjXzAgLy8gIm51bV9vZl95YXlzIgpieXRlY18wIC8vICJudW1fb2ZfeWF5cyIKYXBwX2dsb2JhbF9nZXQKaW50Y18xIC8vIDEKKwphcHBfZ2xvYmFsX3B1dAp2b3RlXzZfbDQ6CnR4biBTZW5kZXIKYnl0ZWNfMyAvLyAiaGFzX3ZvdGUiCmludGNfMSAvLyAxCmFwcF9sb2NhbF9wdXQKcmV0c3ViCgovLyBnZXRfdm90ZV9yZXN1bHQKZ2V0dm90ZXJlc3VsdF83OgpnbG9iYWwgTGF0ZXN0VGltZXN0YW1wCmJ5dGVjIDUgLy8gImVuZF90aW1lIgphcHBfZ2xvYmFsX2dldAo+CmFzc2VydApieXRlY18wIC8vICJudW1fb2ZfeWF5cyIKYXBwX2dsb2JhbF9nZXQKYnl0ZWNfMSAvLyAibnVtX29mX25heXMiCmFwcF9nbG9iYWxfZ2V0Cj4KYm56IGdldHZvdGVyZXN1bHRfN19sNApieXRlY18wIC8vICJudW1fb2ZfeWF5cyIKYXBwX2dsb2JhbF9nZXQKYnl0ZWNfMSAvLyAibnVtX29mX25heXMiCmFwcF9nbG9iYWxfZ2V0CjwKYm56IGdldHZvdGVyZXN1bHRfN19sMwpieXRlYyA2IC8vICJyZXN1bHQiCnB1c2hieXRlcyAweDc0Njk2NSAvLyAidGllIgphcHBfZ2xvYmFsX3B1dApiIGdldHZvdGVyZXN1bHRfN19sNQpnZXR2b3RlcmVzdWx0XzdfbDM6CmJ5dGVjIDYgLy8gInJlc3VsdCIKcHVzaGJ5dGVzIDB4NzI2NTZhNjU2Mzc0NjU2NCAvLyAicmVqZWN0ZWQiCmFwcF9nbG9iYWxfcHV0CmIgZ2V0dm90ZXJlc3VsdF83X2w1CmdldHZvdGVyZXN1bHRfN19sNDoKYnl0ZWMgNiAvLyAicmVzdWx0IgpwdXNoYnl0ZXMgMHg3MDYxNzM3MzY1NjQgLy8gInBhc3NlZCIKYXBwX2dsb2JhbF9wdXQKZ2V0dm90ZXJlc3VsdF83X2w1OgpyZXRzdWI=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKaW50Y2Jsb2NrIDEgMApieXRlY2Jsb2NrIDB4NzY2Zjc0NjU1ZjYzNjg2ZjY5NjM2NSAweDZlNzU2ZDVmNmY2NjVmNmU2MTc5NzMgMHg2ZTc1NmQ1ZjZmNjY1Zjc5NjE3OTczIDB4Njg2MTczNWY3NjZmNzQ2NQp0eG4gTnVtQXBwQXJncwppbnRjXzEgLy8gMAo9PQpibnogbWFpbl9sMgplcnIKbWFpbl9sMjoKY2FsbHN1YiBjbGVhcnZvdGVfMAppbnRjXzAgLy8gMQpyZXR1cm4KCi8vIGNsZWFyX3ZvdGUKY2xlYXJ2b3RlXzA6CnR4biBTZW5kZXIKYnl0ZWNfMyAvLyAiaGFzX3ZvdGUiCmFwcF9sb2NhbF9nZXQKaW50Y18wIC8vIDEKPT0KYXNzZXJ0CnR4biBTZW5kZXIKYnl0ZWNfMCAvLyAidm90ZV9jaG9pY2UiCmFwcF9sb2NhbF9nZXQKcHVzaGJ5dGVzIDB4Nzk2NTczIC8vICJ5ZXMiCj09CmJueiBjbGVhcnZvdGVfMF9sMwp0eG4gU2VuZGVyCmJ5dGVjXzAgLy8gInZvdGVfY2hvaWNlIgphcHBfbG9jYWxfZ2V0CnB1c2hieXRlcyAweDZlNmYgLy8gIm5vIgo9PQpieiBjbGVhcnZvdGVfMF9sNApieXRlY18xIC8vICJudW1fb2ZfbmF5cyIKYXBwX2dsb2JhbF9nZXQKaW50Y18wIC8vIDEKPj0KYXNzZXJ0CmJ5dGVjXzEgLy8gIm51bV9vZl9uYXlzIgpieXRlY18xIC8vICJudW1fb2ZfbmF5cyIKYXBwX2dsb2JhbF9nZXQKaW50Y18wIC8vIDEKLQphcHBfZ2xvYmFsX3B1dApiIGNsZWFydm90ZV8wX2w0CmNsZWFydm90ZV8wX2wzOgpieXRlY18yIC8vICJudW1fb2ZfeWF5cyIKYXBwX2dsb2JhbF9nZXQKaW50Y18wIC8vIDEKPj0KYXNzZXJ0CmJ5dGVjXzIgLy8gIm51bV9vZl95YXlzIgpieXRlY18yIC8vICJudW1fb2ZfeWF5cyIKYXBwX2dsb2JhbF9nZXQKaW50Y18wIC8vIDEKLQphcHBfZ2xvYmFsX3B1dApjbGVhcnZvdGVfMF9sNDoKdHhuIFNlbmRlcgpieXRlY18wIC8vICJ2b3RlX2Nob2ljZSIKcHVzaGJ5dGVzIDB4IC8vICIiCmFwcF9sb2NhbF9wdXQKdHhuIFNlbmRlcgpieXRlY18zIC8vICJoYXNfdm90ZSIKaW50Y18xIC8vIDAKYXBwX2xvY2FsX3B1dApyZXRzdWI="
    },
    "schema": {
        "local": {
            "declared": {
                "vote_choice": {
                    "type": "bytes",
                    "key": "vote_choice",
                    "descr": ""
                },
                "has_vote": {
                    "type": "uint64",
                    "key": "has_vote",
                    "descr": ""
                }
            },
            "reserved": {}
        },
        "global": {
            "declared": {
                "proposal": {
                    "type": "bytes",
                    "key": "proposal",
                    "descr": ""
                },
                "start_time": {
                    "type": "uint64",
                    "key": "start_time",
                    "descr": ""
                },
                "end_time": {
                    "type": "uint64",
                    "key": "end_time",
                    "descr": ""
                },
                "result": {
                    "type": "bytes",
                    "key": "result",
                    "descr": ""
                },
                "num_of_yays": {
                    "type": "uint64",
                    "key": "num_of_yays",
                    "descr": ""
                },
                "num_of_nays": {
                    "type": "uint64",
                    "key": "num_of_nays",
                    "descr": ""
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Voting",
        "methods": [
            {
                "name": "create_proposal",
                "args": [
                    {
                        "type": "string",
                        "name": "proposal"
                    },
                    {
                        "type": "uint64",
                        "name": "end_time"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "vote",
                "args": [
                    {
                        "type": "string",
                        "name": "vote_choice"
                    },
                    {
                        "type": "string",
                        "name": "key"
                    },
                    {
                        "type": "application",
                        "name": "app"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_vote_result",
                "args": [],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    }
}